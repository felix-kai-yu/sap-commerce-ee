<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 3d attempt configuration -->
    <bean depends-on="wirecardPaymentOperationConverterMap" parent="mapMergeDirective">
        <property name="key" value="wd-creditcard-3dsattempt"/>
        <property name="value">
            <map key-type="java.lang.String">
                <entry key-ref="AUTHORIZATION3d" value-ref="creditCardAuthorization3dPaymentOperation"/>
                <entry key-ref="AUTHORIZATION" value-ref="creditCard3dsAttemptAuthorizationPaymentOperation"/>
                <entry key-ref="NOTIFICATION" value-ref="defaultNotificationPaymentOperation"/>
                <entry key-ref="CAPTURE" value-ref="defaultCapturePaymentOperation"/>
                <entry key-ref="CANCEL" value-ref="defaultCancelPaymentOperation"/>
                <entry key-ref="REFUND_FOLLOW_ON" value-ref="defaultRefundPaymentOperation"/>
            </map>
        </property>
    </bean>

    <!-- 3ds only configuration -->
    <bean depends-on="wirecardPaymentOperationConverterMap" parent="mapMergeDirective">
        <property name="key" value="wd-creditcard-3dsonly"/>
        <property name="value">
            <map key-type="java.lang.String">
                <entry key-ref="AUTHORIZATION3d" value-ref="creditCardAuthorization3dPaymentOperation"/>
                <entry key-ref="AUTHORIZATION" value-ref="creditCardCheckEnrollmentPaymentOperation"/>
                <entry key-ref="NOTIFICATION" value-ref="defaultNotificationPaymentOperation"/>
                <entry key-ref="CAPTURE" value-ref="defaultCapturePaymentOperation"/>
                <entry key-ref="CANCEL" value-ref="defaultCancelPaymentOperation"/>
                <entry key-ref="REFUND_FOLLOW_ON" value-ref="defaultRefundPaymentOperation"/>
            </map>
        </property>
    </bean>

    <!-- ssl only configuration -->
    <bean depends-on="wirecardPaymentOperationConverterMap" parent="mapMergeDirective">
        <property name="key" value="wd-creditcard"/>
        <property name="value">
            <map key-type="java.lang.String">
                <entry key-ref="AUTHORIZATION" value-ref="creditCardAuthorizationPaymentOperation"/>
                <entry key-ref="NOTIFICATION" value-ref="defaultNotificationPaymentOperation"/>
                <entry key-ref="CAPTURE" value-ref="defaultCapturePaymentOperation"/>
                <entry key-ref="CANCEL" value-ref="defaultCancelPaymentOperation"/>
                <entry key-ref="REFUND_FOLLOW_ON" value-ref="defaultRefundPaymentOperation"/>
            </map>
        </property>
    </bean>


    <!--Payment Procesors-->

    <bean id="creditCardAuthorizationPaymentProcessor"
          class="com.wirecard.hybris.core.operation.impl.CreditCardAuthorizationPaymentProcessor">
        <property name="objectFactory" ref="wirecardObjectFactory"/>
        <property name="wirecardHopPaymentOperationsFacade" ref="wirecardHopPaymentOperationsFacade"/>
    </bean>

    <bean id="creditCardAuthorizationParesPaymentProcessor"
          class="com.wirecard.hybris.core.operation.impl.CreditCardAuthorizationParesPaymentProcessor">
        <property name="objectFactory" ref="wirecardObjectFactory"/>
    </bean>

    <!--PAYMENT OPERATIONS - CREDIT CARD-->

    <!-- Credit card 3ds attempt configuration -->
    <bean id="creditCard3dsAttemptAuthorizationPaymentOperation" class="com.wirecard.hybris.core.operation.impl.FallbackPaymentOperation">
        <property name="decisionOperation" ref="creditCardCheckEnrollmentPaymentOperation"/>
        <property name="errorOperation" ref="creditCardAuthorizationPaymentOperation"/>
    </bean>

    <!--Credit Card Authorization Operation-->
    <bean id="creditCardAuthorizationPaymentOperation" parent="abstractPaymentOperation">
        <property name="paymentDataConverter" ref="creditCardPaymentAuthorizationConverter"/>
        <property name="paymentCommand" ref="creditCardAuthorizationPaymentCommand"/>
        <property name="responseHandler" ref="creditCardAuthorizationResponseHandler"/>
        <property name="transactionTypeStrategy" ref="authorizationPaymentTransactionStrategy"/>
        <property name="paymentProcessor" ref="creditCardAuthorizationPaymentProcessor"/>
        <property name="fallBack" value="true"/>
    </bean>

    <!--Credit Card Authorization with pares 3d Operation-->
    <bean id="creditCardAuthorization3dPaymentOperation" parent="abstractPaymentOperation">
        <property name="paymentDataConverter" ref="creditCardPaymentAuthorizationConverter"/>
        <property name="paymentCommand" ref="creditCardAuthorization3dPaymentCommand"/>
        <property name="responseHandler" ref="orderRecalculationResponseHandler"/>
        <property name="transactionTypeStrategy" ref="authorizationPaymentTransactionStrategy"/>
        <property name="paymentProcessor" ref="creditCardAuthorizationParesPaymentProcessor"/>
    </bean>

    <!--Credit Card Check Enrollment Operation-->
    <bean id="creditCardCheckEnrollmentPaymentOperation" parent="abstractPaymentOperation">
        <property name="paymentDataConverter" ref="creditCardPaymentCheckEnrollmentConverter"/>
        <property name="paymentCommand" ref="creditCardAuthorization3dPaymentCommand"/>
        <property name="responseHandler" ref="creditCardCheckEnrollmentResponseHandler"/>
        <property name="transactionTypeStrategy" ref="checkEnrollmentPaymentTransactionStrategy"/>
        <property name="paymentProcessor" ref="creditCardAuthorizationPaymentProcessor"/>
    </bean>

    <!--PAYMENT COMMANDS-->
    <!--Authorization 3d-->
    <bean id="creditCardAuthorization3dPaymentCommand" parent="defaultWirecardPaymentCommand">
        <property name="requestUrl" value="wirecard.url.creditcard.3d.authorization"/>
    </bean>

    <!--Authorization whithout 3d-->
    <bean id="creditCardAuthorizationPaymentCommand" parent="defaultWirecardPaymentCommand">
        <property name="requestUrl" value="wirecard.url.creditcard.3d.authorization"/>
    </bean>

    <!--RESPONSE HANDLERS-->

    <bean id="abstractOrderCreditCardResponseHandler"
          class="com.wirecard.hybris.core.payment.response.impl.AbstractOrderCreditCardResponseHandler"
          abstract="true" parent="defaultOrderResponseHandler"/>

    <!--Check Enrollment-->
    <bean id="creditCardCheckEnrollmentResponseHandler"
          class="com.wirecard.hybris.core.payment.response.impl.WirecardCreditCardCheckEnrollmentResponseHandler"
          parent="abstractOrderCreditCardResponseHandler">
        <property name="paymentOperationStrategy" ref="wirecardPaymentOperationStrategy"/>
        <property name="checkEnrollmentErrors">
            <list>
                <value>500.1072</value>
                <value>500.1073</value>
                <value>500.1074</value>
                <value>500.1086</value>
            </list>
        </property>
        <property name="checkoutCustomerStrategy" ref="defaultCheckoutCustomerStrategy"/>
        <property name="paymentInfoClass" value="de.hybris.platform.core.model.order.payment.CreditCardPaymentInfoModel"/>
        <property name="needsRecalculation" value="true"/>
    </bean>

    <!--Authorization-->
    <bean id="creditCardAuthorizationResponseHandler"
          class="com.wirecard.hybris.core.payment.response.impl.WirecardCreditCardAuthorizationResponseHandler"
          parent="abstractOrderCreditCardResponseHandler">
        <property name="wirecardPaymentService" ref="wirecardPaymentService"/>
        <property name="checkoutCustomerStrategy" ref="defaultCheckoutCustomerStrategy"/>
        <property name="paymentInfoClass" value="de.hybris.platform.core.model.order.payment.CreditCardPaymentInfoModel"/>
        <property name="needsRecalculation" value="true"/>
    </bean>


    <!--AUTHORIZATION CONVERTER-->

    <bean id="creditCardPaymentAuthorizationConverter" parent="defaultPaymentAuthorizationConverter">
        <property name="targetClass" value="com.wirecard.hybris.core.data.types.Payment"/>
        <property name="populators">
            <list merge="true">
                <ref bean="wirecardPaymentOrderItemsPopulator"/>
                <ref bean="checkEnrollmentParentTransactionIdPopulator"/>
                <ref bean="threeDSecure2FieldsPopulator"/>
            </list>
        </property>
    </bean>

    <bean id="creditCardPaymentCheckEnrollmentConverter" parent="abstractPopulatingConverter">
        <property name="targetClass" value="com.wirecard.hybris.core.data.types.Payment"/>
        <property name="populators">
            <list merge="true">
                <ref bean="omniPaymentPopulator"/>
                <ref bean="paymentMethodsPopulator"/>
                <ref bean="personalDataPaymentPopulator"/>
                <ref bean="wirecardPaymentOrderItemsPopulator"/>
                <ref bean="checkEnrollmentTransactionTypePopulator"/>
                <ref bean="threeDSecure2FieldsPopulator"/>
            </list>
        </property>
    </bean>


</beans>
